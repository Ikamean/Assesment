[{"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\index.js":"1","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\App.js":"2","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\UserPage.js":"3","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\Landing.js":"4","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\Error.js":"5","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\Footer.js":"6","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\User.js":"7","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\orgs.js":"8","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\services\\Services.js":"9"},{"size":200,"mtime":1609872518710,"results":"10","hashOfConfig":"11"},{"size":495,"mtime":1609874669400,"results":"12","hashOfConfig":"11"},{"size":683,"mtime":1609872517331,"results":"13","hashOfConfig":"11"},{"size":3333,"mtime":1609873665490,"results":"14","hashOfConfig":"11"},{"size":794,"mtime":1609872516428,"results":"15","hashOfConfig":"11"},{"size":555,"mtime":1609872517338,"results":"16","hashOfConfig":"11"},{"size":3087,"mtime":1609872517718,"results":"17","hashOfConfig":"11"},{"size":974,"mtime":1609872518131,"results":"18","hashOfConfig":"11"},{"size":734,"mtime":1609874684627,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"i262pn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\index.js",[],["43","44"],"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\App.js",[],"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\UserPage.js",["45","46"],"import React, { useEffect,useState } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport {Link} from 'react-router-dom'\r\nimport User from '../components/User'\r\nimport Orgs from '../components/orgs'\r\nconst UserPage = ({match}) =>{\r\n    const login = match.params.login;\r\n    \r\n    return(\r\n        <div className='UserPage'>\r\n\r\n            <div className='backToLanding'>\r\n                <Link to='/Assesment'>Landing Page</Link>\r\n            </div>\r\n\r\n            <div>\r\n                \r\n                <User login={login} />\r\n                <Orgs login={login} />\r\n                <Footer />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\Landing.js",[],"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\Pages\\Error.js",[],"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\Footer.js",[],"C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\User.js",["47","48","49","50"],"import React, { useEffect, useState } from 'react';\r\nimport Services from '../services/Services';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst User = ({login}) =>{\r\n\r\n    const [ userData, setUserData ] = useState([])\r\n    const [ repos, setRepos ] = useState ([])\r\n    \r\n    const getData = () =>{\r\n        Services.getUser(login)\r\n        .then(response=>setUserData(response.data))\r\n    }\r\n\r\n    const getRepos = () =>{\r\n        Services.getRepos(login).\r\n        then(response=>setRepos(response.data))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData()\r\n        getRepos()\r\n    },[])\r\n        \r\n    const reposArr = repos.map(repo=>repo.name)\r\n    const repoUrl = repos.map(url=>url.html_url)\r\n    \r\n    if(reposArr.length){\r\n        reposArr.splice(3)\r\n        repoUrl.splice(3)\r\n    }\r\n    const repoPage = []\r\n\r\n    for(let i =0; i<3; i++){\r\n        repoPage.push({\r\n            name: reposArr[i],\r\n            url : repoUrl[i]\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <div className='userDetails' >\r\n            <div className='NameLink'>\r\n                <Link to={`/Assesment/${userData.login}`} className='userLink'>{userData.name? userData.name : userData.login} </Link>\r\n            </div>\r\n            <div >\r\n                <h4 className='userType'>\r\n                    <div className='type'> \r\n                        <span className=\"material-icons \" >\r\n                            account_box\r\n                        </span>\r\n                        {userData.type}</div> \r\n                    <div className='login'>\r\n                        <span>Github : </span> \r\n                        <a href={userData.html_url} target='_blank' >{userData.login} </a> \r\n                    </div>\r\n                </h4>\r\n                <img  src={userData.avatar_url} alt='user avatar'/>\r\n                {\r\n                reposArr.length>0?\r\n                    <div className='repoDiv' >\r\n                    <ul> \r\n                        <div className='reposList'>\r\n                        {repoPage.map((repo,i)=>\r\n\r\n                            <div key={i}>\r\n\r\n                                <li  >\r\n                                    \r\n                                    <span className=\"material-icons codeIcon\" >\r\n                                        code\r\n                                    </span>\r\n\r\n                                    <a href={repo.url} target='_blank' >\r\n                                        {repo.name}\r\n                                    </a>\r\n\r\n                                </li>\r\n\r\n                            </div>\r\n                            )}\r\n                        </div>  \r\n                    </ul>\r\n                    </div>\r\n                :\r\n                    <div>\r\n                        <span className=\"material-icons codeIcon\" >\r\n                                        code\r\n                        </span>\r\n                        No Repositories\r\n                    </div>\r\n                }\r\n                \r\n            </div>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\components\\orgs.js",["51","52","53"],"import React, { useEffect,useState } from 'react'\r\nimport Services from '../services/Services'\r\n\r\n\r\nconst Orgs = ({login})=>{\r\n   const [ orgsArr, setOrgsArr ] = useState([])\r\n\r\n    const getDetails = () =>{\r\n        Services.getOrgs(login).\r\n        then(response=>setOrgsArr(response.data))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDetails()\r\n    },[])\r\n    \r\n    \r\n   if(orgsArr.length === 0){\r\n    return(\r\n        <div key='not Member'>\r\n        <h3>Not member of any organisation</h3>\r\n        </div>\r\n    )\r\n   }  \r\n    return(\r\n     <div className='organisationArray'>\r\n    {orgsArr.map(\r\n        (org,i)=>\r\n                \r\n            <div key={i} className='organisation'>\r\n                <img src={org.avatar_url} alt='organisation avatar' className='orgsAvatar' />\r\n                <a href={`https://github.com/${org.login}`} target='_blank'>{org.name||org.login}</a>\r\n            </div>\r\n                \r\n    )}\r\n    </div>)\r\n}\r\n    \r\n\r\nexport default Orgs","C:\\Users\\Ikmean\\Desktop\\New folder\\final\\src\\services\\Services.js",["54"],"import Axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nconst baseUrl = 'https://api.github.com/users'\r\nconst token = process.env.REACT_APP_TOKEN;\r\nconsole.log('token',token);\r\nconst header = {\r\n    'Authorization' : `Token ${token}`\r\n}\r\n\r\n\r\nconst getData =()=> Axios.get(baseUrl,\r\n    {\r\n        method : 'GET',\r\n        headers : header\r\n    }\r\n    )\r\n\r\n\r\n\r\nconst getUser = login => Axios.get(`${baseUrl}/${login}`,{\r\n    method : 'GET',\r\n    headers : header\r\n})\r\n\r\n\r\nconst getRepos = login => Axios.get(`${baseUrl}/${login}/repos`,{\r\n    method : 'GET',\r\n    headers : header\r\n})\r\n\r\nconst getOrgs = (login) => Axios.get(`${baseUrl}/${login}/orgs`,{\r\n    method : 'GET',\r\n    headers : header\r\n})\r\n\r\nexport default {getData,getUser,getRepos,getOrgs}",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":16,"column":33,"nodeType":"66","messageId":"67","endLine":16,"endColumn":34,"fix":"68"},{"ruleId":"69","severity":1,"message":"70","line":23,"column":7,"nodeType":"71","endLine":23,"endColumn":9,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":57,"column":25,"nodeType":"75","endLine":57,"endColumn":70},{"ruleId":"73","severity":1,"message":"74","line":76,"column":37,"nodeType":"75","endLine":76,"endColumn":73},{"ruleId":"64","severity":1,"message":"65","line":9,"column":32,"nodeType":"66","messageId":"67","endLine":9,"endColumn":33,"fix":"76"},{"ruleId":"69","severity":1,"message":"77","line":15,"column":7,"nodeType":"71","endLine":15,"endColumn":9,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"74","line":32,"column":17,"nodeType":"75","endLine":32,"endColumn":77},{"ruleId":"79","severity":1,"message":"80","line":40,"column":1,"nodeType":"81","endLine":40,"endColumn":50},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"84","text":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData' and 'getRepos'. Either include them or remove the dependency array.","ArrayExpression",["86"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",{"range":"87","text":"85"},"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["88"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[459,470],"\r\n        .",{"desc":"89","fix":"90"},[240,251],{"desc":"91","fix":"92"},"Update the dependencies array to be: [getData, getRepos]",{"range":"93","text":"94"},"Update the dependencies array to be: [getDetails]",{"range":"95","text":"96"},[586,588],"[getData, getRepos]",[352,354],"[getDetails]"]